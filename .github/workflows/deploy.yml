
name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      - variable: NEXT_PUBLIC_FIREBASE_API_KEY
        secret: NEXT_PUBLIC_FIREBASE_API_KEY
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
        secret: NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_PROJECT_ID
        secret: NEXT_PUBLIC_FIREBASE_PROJECT_ID
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
        secret: NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
        secret: NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
        availability: [BUILD, RUNTIME]
      - variable: NEXT_PUBLIC_FIREBASE_APP_ID
        secret: NEXT_PUBLIC_FIREBASE_APP_ID
        availability: [BUILD, RUNTIME]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run Lint
        run: npm run lint
      - name: Build Project
        run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FITNESS_FLOW }}'
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install latest Firebase CLI
        run: npm install -g firebase-tools@latest

      - name: Install latest Firebase CLI
        run: npm install -g firebase-tools@latest

      - name: Push secrets to App Hosting (Secret Manager)
        run: |
          set -e
          export PROJECT_ID='${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}'
          export BACKEND_ID='studio' # o el ID real de tu backend

          echo "${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" | firebase apphosting:secrets:set --force --data-file - NEXT_PUBLIC_FIREBASE_API_KEY --project "$PROJECT_ID"
          echo "${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" | firebase apphosting:secrets:set --force --data-file - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN --project "$PROJECT_ID"
          echo "${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" | firebase apphosting:secrets:set --force --data-file - NEXT_PUBLIC_FIREBASE_PROJECT_ID --project "$PROJECT_ID"
          echo "${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" | firebase apphosting:secrets:set --force --data-file - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET --project "$PROJECT_ID"
          echo "${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" | firebase apphosting:secrets:set --force --data-file - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID --project "$PROJECT_ID"
          echo "${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" | firebase apphosting:secrets:set --force --data-file - NEXT_PUBLIC_FIREBASE_APP_ID --project "$PROJECT_ID"

          # Conceder acceso del backend a los secrets (importante)
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_API_KEY --backend "$BACKEND_ID" --project "$PROJECT_ID"
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN --backend "$BACKEND_ID" --project "$PROJECT_ID"
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_PROJECT_ID --backend "$BACKEND_ID" --project "$PROJECT_ID"
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET --backend "$BACKEND_ID" --project "$PROJECT_ID"
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID --backend "$BACKEND_ID" --project "$PROJECT_ID"
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_APP_ID --backend "$BACKEND_ID" --project "$PROJECT_ID"

      - name: Deploy to Firebase App Hosting
        run: firebase deploy --only apphosting --project ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
