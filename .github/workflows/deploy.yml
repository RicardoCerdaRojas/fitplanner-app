name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FITNESS_FLOW }}'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools@latest

      # üëâ Cargar secrets en App Hosting y conceder acceso al backend
      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}

      - name: Sync secrets to Secret Manager (non-interactive)
        shell: bash
        run: |
          set -euo pipefail
          PROJECT_ID='${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}'

          ensure_secret() {
            local NAME="$1"; local VALUE="$2"
            # crea si no existe
            if ! gcloud secrets describe "$NAME" --project "$PROJECT_ID" >/dev/null 2>&1; then
              gcloud secrets create "$NAME" --project "$PROJECT_ID" --replication-policy="automatic"
            fi
            # a√±ade nueva versi√≥n desde stdin
            printf '%s' "$VALUE" | gcloud secrets versions add "$NAME" --project "$PROJECT_ID" --data-file=-
          }

          ensure_secret NEXT_PUBLIC_FIREBASE_API_KEY            '${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}'
          ensure_secret NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN        '${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}'
          ensure_secret NEXT_PUBLIC_FIREBASE_PROJECT_ID         '${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}'
          ensure_secret NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET     '${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}'
          ensure_secret NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID '${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}'
          ensure_secret NEXT_PUBLIC_FIREBASE_APP_ID             '${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}'

      - name: Grant backend access to secrets
        run: |
          set -e
          PROJECT_ID='${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}'
          BACKEND_ID='studio'  # cambia si tu backend tiene otro ID
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_API_KEY            --backend "$BACKEND_ID" --project "$PROJECT_ID" --non-interactive
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN        --backend "$BACKEND_ID" --project "$PROJECT_ID" --non-interactive
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_PROJECT_ID         --backend "$BACKEND_ID" --project "$PROJECT_ID" --non-interactive
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET     --backend "$BACKEND_ID" --project "$PROJECT_ID" --non-interactive
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID --backend "$BACKEND_ID" --project "$PROJECT_ID" --non-interactive
          firebase apphosting:secrets:grantaccess NEXT_PUBLIC_FIREBASE_APP_ID             --backend "$BACKEND_ID" --project "$PROJECT_ID" --non-interactive

      - name: Deploy to Firebase App Hosting
        run: firebase deploy --only apphosting --project ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
