
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Function to get user's gymId from their profile document
    function getUserGymId(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.gymId;
    }

    // --- Collection Rules ---

    // Users can be created by anyone (signup flow)
    // Users can read their own profile.
    // Admins can read profiles of users in their gym.
    // Users can update their own profile (e.g., demographics).
    // Admins can update profiles of users in their gym, but cannot make them an admin.
    match /users/{userId} {
      allow create: if true;
      allow read, update: if isUser(userId);
      // More advanced rules for admin access could be added here if needed,
      // but for now, we keep it simple to avoid permission errors.
    }

    // Gyms can be created by anyone (signup flow).
    // Anyone can read gym info (for theme/logo loading).
    // Only the gym admin can update their gym's details.
    match /gyms/{gymId} {
      allow create, read: if true;
      allow update: if isSignedIn() && getUserGymId(request.auth.uid) == gymId;
    }
    
    // Membership documents are critical for roles.
    // Unauthenticated users can get a specific doc by email to check for pending invites.
    // Only the user themselves can perform actions on their specific membership document.
    match /memberships/{membershipId} {
        allow get: if !isSignedIn(); // For the /join page to check for invites by email (doc ID)
        allow read, write: if isSignedIn() && membershipId.startsWith(request.auth.uid);
    }
    
    // Default rules for gym-specific data like routines, exercises, etc.
    // Allow read/write if the user belongs to the gym associated with the document.
    match /routines/{docId} {
      allow read, write, delete: if isSignedIn() && request.resource.data.gymId == getUserGymId(request.auth.uid);
    }
     match /routineTypes/{docId} {
      allow read, write, delete: if isSignedIn() && resource.data.gymId == getUserGymId(request.auth.uid);
    }
     match /routineTemplates/{docId} {
      allow read, write, delete: if isSignedIn() && request.resource.data.gymId == getUserGymId(request.auth.uid);
    }
     match /exercises/{docId} {
      allow read, write, delete: if isSignedIn() && resource.data.gymId == getUserGymId(request.auth.uid);
    }
     match /workoutSessions/{docId} {
      allow read, write, delete: if isSignedIn() && request.resource.data.gymId == getUserGymId(request.auth.uid);
    }
  }
}
