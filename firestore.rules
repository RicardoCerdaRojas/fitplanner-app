rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user belongs to a specific gym and has a specific role
    function isGymMember(gymId, role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gymId == gymId
             && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    match /users/{userId} {
      // Users can only read/write their own profile
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Allow creation of user profile during signup
      allow create: if request.auth != null;
    }

    match /gyms/{gymId} {
      // Any authenticated user can read gym profiles (for themes, logos)
      allow read: if request.auth != null;
      // Only the gym admin can update the gym profile
      allow update: if request.auth != null && isGymMember(gymId, 'gym-admin');
    }

    match /invites/{email} {
      // Only admins of the specific gym can create/delete invites
      allow create, delete: if request.auth != null && isGymMember(request.resource.data.gymId, 'gym-admin');
      // Authenticated users can read their own invite after signing up
      allow read: if request.auth != null && request.auth.token.email == email;
    }

    match /routines/{routineId} {
      // Admins and coaches can create/update routines
      allow create, update: if request.auth != null && (isGymMember(request.resource.data.gymId, 'gym-admin') || isGymMember(request.resource.data.gymId, 'coach'));
      // Only the coach who created it or an admin can delete it
      allow delete: if request.auth != null && (isGymMember(resource.data.gymId, 'gym-admin') || resource.data.coachId == request.auth.uid);
      // Athletes can read/update their own routines, admins/coaches of the gym can also read
      allow read: if request.auth != null && (resource.data.athleteId == request.auth.uid || isGymMember(resource.data.gymId, 'gym-admin') || isGymMember(resource.data.gymId, 'coach'));
    }

    match /routineTypes/{typeId} {
        // Only admins can manage routine types for their gym
        allow read, create, update, delete: if request.auth != null && isGymMember(request.resource.data.gymId, 'gym-admin');
    }

    match /workoutSessions/{sessionId} {
      // An athlete can create/update/delete their own session document
      allow create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // A gym-admin can read sessions belonging to their gym
      allow list: if request.auth != null && isGymMember(request.query.filters[0].value, 'gym-admin');
      allow get: if request.auth != null && isGymMember(resource.data.gymId, 'gym-admin');
    }

  }
}
