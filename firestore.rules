
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    match /users/{userId} {
      // Allow user creation on signup.
      // Allow updates from webhooks (like Stripe) which are not authenticated.
      // This is a key change to fix the subscription flow.
      allow create, update: if true;
      
      // Allow signed-in users to read profiles (e.g., for admin dashboards).
      allow read: if isSignedIn();
    }

    match /gyms/{gymId} {
      // Allow any signed-in user to create or update a gym document.
      // A stricter rule for production would be:
      // allow write: if request.auth.uid == resource.data.adminUid;
      allow write: if isSignedIn();
      
      // Allow any signed-in user to read gym data (for themes, names, etc.).
      allow read: if isSignedIn();
    }

    match /memberships/{membershipId} {
        // Allow unauthenticated checks for pending memberships by email.
        allow get: if true;
        // Allow signed-in users to manage memberships.
        allow list, write: if isSignedIn();
    }
    
    match /routines/{routineId} {
        // Routines can only be managed by signed-in users.
        // Stricter rules would check for gymId or memberId.
        allow read, write: if isSignedIn();
    }

    match /routineTypes/{typeId} {
        // Routine types can only be managed by signed-in users.
        allow read, write: if isSignedIn();
    }
    
    match /routineTemplates/{templateId} {
        // Templates can only be managed by signed-in users.
        allow read, write: if isSignedIn();
    }
    
    match /workoutSessions/{sessionId} {
      // Live workout sessions can only be created/updated by signed-in users.
      // Deletion is handled by the backend.
      allow read, write: if isSignedIn();
    }
  }
}
