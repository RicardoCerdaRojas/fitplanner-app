rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserProfile(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isGymMember(gymId) {
        if (!isUserAuthenticated()) { return false; }
        return getUserData(request.auth.uid).gymId == gymId;
    }
    
    function isSignedInUserAdmin(gymId) {
      if (!isGymMember(gymId)) { return false; }
      return getUserData(request.auth.uid).role == 'gym-admin';
    }

    function isSignedInUserCoachOrAdmin(gymId) {
      if (!isGymMember(gymId)) { return false; }
      let role = getUserData(request.auth.uid).role;
      return role == 'coach' || role == 'gym-admin';
    }

    function isSignedInUserAthlete(gymId) {
       if (!isGymMember(gymId)) { return false; }
       return getUserData(request.auth.uid).role == 'athlete';
    }
    
    // --- Collection Rules ---

    match /users/{userId} {
      allow read: if isUserProfile(userId) || isSignedInUserAdmin(resource.data.gymId);
      allow create: if isUserAuthenticated();
      allow update: if isUserProfile(userId) || isSignedInUserAdmin(get(/databases/$(database)/documents/users/$(userId)).data.gymId);
    }

    match /gyms/{gymId} {
      allow read: if isGymMember(gymId);
      allow create: if isUserAuthenticated() && getUserData(request.auth.uid).gymId == null;
    }

    match /invites/{email} {
      // Admins can manage invites. Users can read/delete their own invite during signup.
      allow read, delete: if isSignedInUserAdmin(get(/databases/$(database)/documents/invites/$(email)).data.gymId) || request.auth.token.email == email;
      allow create, update: if isSignedInUserAdmin(request.resource.data.gymId);
    }
    
    match /routineTypes/{typeId} {
      allow read: if isGymMember(resource.data.gymId);
      allow write: if isSignedInUserAdmin(get(/databases/$(database)/documents/routineTypes/$(typeId)).data.gymId) || isSignedInUserAdmin(request.resource.data.gymId);
    }
    
    match /routines/{routineId} {
      allow read: if (isSignedInUserCoachOrAdmin(resource.data.gymId)) || 
                     (isSignedInUserAthlete(resource.data.gymId) && resource.data.athleteId == request.auth.uid);

      allow create: if isSignedInUserCoachOrAdmin(request.resource.data.gymId);
      
      allow update: if (isSignedInUserCoachOrAdmin(resource.data.gymId)) ||
                     (isSignedInUserAthlete(resource.data.gymId) && 
                      request.auth.uid == resource.data.athleteId &&
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['progress']));
                  
      allow delete: if isSignedInUserCoachOrAdmin(get(/databases/$(database)/documents/routines/$(routineId)).data.gymId);
    }
  }
}
