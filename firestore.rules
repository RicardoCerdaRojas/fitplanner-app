rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isGymAdmin(gymId) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'gym-admin' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gymId == gymId;
    }

    function isGymCoach(gymId) {
       return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coach' && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gymId == gymId;
    }

    function isMemberOf(gymId) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gymId == gymId;
    }
    
    match /users/{userId} {
      allow read: if isSignedIn() && request.auth.uid == userId;
      allow create: if !isSignedIn(); // Allow user creation on signup
      allow update: if isSignedIn() && request.auth.uid == userId; // Users can update their own profile
    }

    match /gyms/{gymId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn(); // Allow gym creation by a new user
      allow update: if isGymAdmin(gymId); // Only admin of that gym can update
    }

    match /memberships/{membershipId} {
      allow get: if !isSignedIn(); // Allow unauthenticated checks for pending memberships
      allow create, delete: if isGymAdmin(request.resource.data.gymId);
    }
    
    match /exercises/{exerciseId} {
       allow read: if isMemberOf(get(/databases/$(database)/documents/exercises/$(exerciseId)).data.gymId);
       allow write: if isGymAdmin(request.resource.data.gymId) || isGymCoach(request.resource.data.gymId);
    }
    
    match /routineTypes/{typeId} {
        allow read: if isMemberOf(get(/databases/$(database)/documents/routineTypes/$(typeId)).data.gymId);
        allow write: if isGymAdmin(request.resource.data.gymId);
    }

    match /routineTemplates/{templateId} {
        allow read: if isMemberOf(get(/databases/$(database)/documents/routineTemplates/$(templateId)).data.gymId);
        allow write: if isGymAdmin(request.resource.data.gymId) || isGymCoach(request.resource.data.gymId);
    }
    
    match /routines/{routineId} {
       allow read: if isMemberOf(get(/databases/$(database)/documents/routines/$(routineId)).data.gymId);
       allow create, update, delete: if isGymAdmin(request.resource.data.gymId) || isGymCoach(request.resource.data.gymId);
       allow update: if isSignedIn() && request.auth.uid == resource.data.memberId; // Athlete can update their own progress
    }
    
    match /workoutSessions/{sessionId} {
       allow read, write: if isSignedIn() && request.auth.uid == sessionId; // Users can only manage their own live session
       allow read: if isGymAdmin(get(/databases/$(database)/documents/workoutSessions/$(sessionId)).data.gymId); // Admins can read live sessions for their gym
    }
  }
}
