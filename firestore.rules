rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---

    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // --- Collection Rules ---

    // USERS: Contains global user info (name, email).
    match /users/{userId} {
      // Any signed-in user can create their own user document.
      allow create: if isUser(userId);
      // A user can read/update their own profile.
      allow read, update: if isUser(userId);
      // TODO: Allow admins/coaches to read user profiles from their gym.
    }

    // GYMS: Contains gym-specific info (name, theme, logo).
    match /gyms/{gymId} {
      // A user can create a gym document.
      // The companion membership document rule provides the real security here.
      allow create: if isSignedIn();
      // Any signed-in user can read a gym's public profile.
      allow read: if isSignedIn();
      
      // Only an admin of that gym can update it.
      // This requires checking the 'memberships' collection.
      allow update: if isSignedIn() &&
                     exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(gymId)) &&
                     get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(gymId)).data.role == 'gym-admin';
    }

    // INVITES: One-time use documents for users to join a gym.
    match /invites/{email} {
      // Only an admin can create an invite for their own gym.
      allow create: if isSignedIn() &&
                     request.resource.data.gymId == get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(request.resource.data.gymId)).data.gymId &&
                     get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(request.resource.data.gymId)).data.role == 'gym-admin';
      
      // Only the invited user (by email) or a gym admin can read/delete it.
      allow read, delete: if isSignedIn() &&
                           (request.auth.token.email == email ||
                           (exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)) &&
                           get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)).data.role == 'gym-admin'));
    }

    // MEMBERSHIPS: Defines the relationship (and role) between a user and a gym.
    match /memberships/{membershipId} {
      // A user can create a membership for themselves.
      // This is used for creating a gym or consuming an invite.
      allow create: if isUser(request.resource.data.userId);

      // A user can read their own memberships.
      // An admin can read any membership for their gym.
      allow read: if isUser(resource.data.userId) ||
                   (exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)) &&
                   get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)).data.role == 'gym-admin');
      
      // An admin can delete memberships from their gym (e.g. remove a user).
      allow delete, update: if isSignedIn() &&
                      exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)) &&
                      get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)).data.role == 'gym-admin';
    }


    // ROUTINES: Workout plans created by coaches for athletes.
    match /routines/{routineId} {
      // Coaches/admins can manage routines.
      allow create, update, delete: if isSignedIn() &&
                                     exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(request.resource.data.gymId)) &&
                                     (get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(request.resource.data.gymId)).data.role == 'coach' ||
                                      get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(request.resource.data.gymId)).data.role == 'gym-admin');

      // Staff can read any routine in their gym. Athletes can read their own.
      allow read: if isSignedIn() &&
                  (isUser(resource.data.athleteId) ||
                  (exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)) &&
                  (get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)).data.role == 'coach' ||
                   get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)).data.role == 'gym-admin')));

      // An athlete can update their own progress. ONLY the progress field.
      allow update: if isUser(resource.data.athleteId) &&
                     request.resource.data.diff(resource.data).affectedKeys().hasOnly(['progress']);
    }


    // ROUTINE TYPES: Categories for routines (e.g. Upper Body).
    match /routineTypes/{typeId} {
      // Admins can manage routine types for their gym.
      allow create, update, delete: if isSignedIn() &&
                                      exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(request.resource.data.gymId)) &&
                                      get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(request.resource.data.gymId)).data.role == 'gym-admin';
      
      // Staff (coaches/admins) can read routine types.
      allow read: if isSignedIn() &&
                   exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)) &&
                   (get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)).data.role == 'coach' ||
                    get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)).data.role == 'gym-admin');
    }
    

    // WORKOUT SESSIONS: Live data for an active workout.
    match /workoutSessions/{sessionId} {
      // An athlete can write to their own session document.
      allow write: if isUser(sessionId);

      // An admin can read any session in their gym.
      allow read: if isSignedIn() &&
                   exists(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)) &&
                   get(/databases/$(database)/documents/memberships/$(request.auth.uid)_$(resource.data.gymId)).data.role == 'gym-admin';
    }
  }
}